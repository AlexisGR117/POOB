#BlueJ class context
comment0.target=ICPCContest
comment0.text=\r\n\ Soluciona\ y\ simula\ el\ Problem\ B\ de\ la\ marat\u00F3n\ de\ programaci\u00F3n\ internacional\ 2020\ The\ Cost\ of\ Speed\ Limits.\r\n\ \r\n\ @author\ Angel\ Cuervo\ y\ Jefer\ Gonzalez\r\n\ @version\ 1.0\ (01/10/2022)\r\n
comment1.params=cost\ routesSpeedLimits
comment1.target=int\ solve(int,\ int[][])
comment1.text=\r\n\ Soluciona\ el\ problema\ de\ marat\u00F3n.\r\n\ @param\ cost\ Costo\ de\ las\ se\u00F1ales\ de\ la\ red\ ICPC.\r\n\ @param\ routesSpeedLimits\ Informaci\u00F3n\ definida\ en\ el\ Problem\ B.\r\n\ @return\ El\ costo\ m\u00EDnimo\ de\ actualizar\ e\ instalar\ se\u00F1ales\ de\ l\u00EDmite\ de\ velocidad.\r\n
comment10.params=routesSpeedLimits\ cost\ intersections
comment10.target=java.util.HashMap\ costs(int[][],\ int,\ java.util.ArrayList)
comment10.text=\r\n\ Calcula\ los\ costos\ de\ poner\ solo\ se\u00F1ales\ y\ el\ costo\ de\ solo\ aumentar\ los\ l\u00EDmites\ de\ velocidad\ de\ cada\ intersecci\u00F3n.\r\n
comment11.params=costs\ costChange
comment11.target=int\ minimum(java.util.HashMap,\ int)
comment11.text=\r\n\ Da\ el\ costo\ m\u00EDnimo\ de\ poner\ se\u00F1ales\ y\ aumentar\ los\ l\u00EDmites\ de\ velocidad.\r\n
comment12.params=intersection
comment12.target=java.lang.String\ color(int)
comment12.text=\r\n\ Retorna\ el\ color\ correpondiente\ al\ n\u00FAmero\ de\ intersecci\u00F3n\ dado.\r\n
comment13.params=A\ B
comment13.target=java.lang.String\ order(java.lang.String,\ java.lang.String)
comment13.text=\r\n\ Ordena\ dos\ cadenas\ y\ las\ concatena,\ separandolas\ por\ un\ gui\u00F3n.\r\n
comment14.params=red\ higher
comment14.target=void\ changeRSL(ICPC,\ int)
comment14.text=\r\n\ Cambia\ los\ l\u00EDmites\ de\ velocidad\ por\ el\ mayor\ l\u00EDmite\ de\ velocidad\ de\ la\ red\ ICPC.\ Reperesenta\ este\ cambio\ cambiando\ el\ color\ de\ las\ carreteras\ por\ verde.\r\n
comment15.params=red\ routesSpeedLimits\ k\ color
comment15.target=void\ changeRSL(ICPC,\ int[][],\ int,\ java.lang.String)
comment15.text=\r\n\ Cambia\ los\ l\u00EDmites\ de\ velocidad\ por\ el\ mayor\ l\u00EDmite\ de\ velocidad\ de\ las\ rutas\ que\ comparten\ una\ intersecci\u00F3n\ dada.\ Reperesenta\ este\ cambio\ cambiando\ el\ color\ de\ las\ carreteras\ por\ verde.\ \r\n
comment16.params=red\ color
comment16.target=void\ putSigns(ICPC,\ java.lang.String)
comment16.text=\r\n\ Pone\ se\u00F1ales\ a\ todas\ las\ rutas\ que\ comparten\ una\ intersecci\u00F3n\ dada.\r\n
comment17.params=routesSpeedLimits
comment17.target=boolean[]\ validInformation(int[][])
comment17.text=\r\n\ Valida\ la\ informaci\u00F3n\ dada.\r\n
comment2.params=cost\ routesSpeedLimits
comment2.target=void\ simulate(int,\ int[][])
comment2.text=\r\n\ Simula\ la\ soluci\u00F3n\ del\ problema\ de\ marat\u00F3n.\r\n\ @param\ cost\ Costo\ de\ las\ se\u00F1ales\ de\ la\ red\ ICPC.\r\n\ @param\ routesSpeedLimits\ Informaci\u00F3n\ definida\ en\ el\ Problem\ B.\r\n
comment3.params=
comment3.target=boolean\ ok()
comment3.text=\r\n\ Dice\ si\ la\ \u00FAltima\ acci\u00F3n\ se\ hizo\ o\ no.\r\n\ @return\ Retorna\ si\ la\ \u00FAltima\ acci\u00F3n\ se\ pudo\ realizar\ o\ no.\r\n
comment4.params=routesSpeedLimits
comment4.target=int\ higherRSL(int[][])
comment4.text=\r\n\ Encuentra\ el\ l\u00EDmite\ de\ velocidad\ mas\ alto\ presente\ en\ la\ red\ ICPC.\r\n
comment5.params=routesSpeedLimits\ intersection
comment5.target=int\ higherRSL(int[][],\ int)
comment5.text=\r\n\ Encuentra\ el\ l\u00EDmite\ de\ velocidad\ m\u00E1s\ alto\ presente\ en\ las\ rutas\ que\ comparten\ una\ intersecci\u00F3n\ dada.\r\n
comment6.params=routesSpeedLimits
comment6.target=java.util.HashMap\ numberRoutes(int[][])
comment6.text=\r\n\ Da\ el\ n\u00FAmero\ de\ rutas\ que\ salen\ de\ cada\ intersecci\u00F3n\ de\ la\ red\ ICPC.\r\n
comment7.params=routesSpeedLimits
comment7.target=java.util.ArrayList\ intersections(int[][])
comment7.text=\r\n\ Da\ las\ intersecciones\ presentes\ en\ la\ red\ ICPC.\r\n
comment8.params=routesSpeedLimits\ higher
comment8.target=int\ costChange(int[][],\ int)
comment8.text=\r\n\ Devuelve\ el\ costo\ de\ cambiar\ todos\ los\ l\u00EDmites\ de\ velocidad\ de\ la\ red\ ICPC\ por\ el\ l\u00EDmite\ de\ velocidad\ mayor.\r\n
comment9.params=routesSpeedLimits\ higher\ intersection\ nRoutes
comment9.target=int\ costChange(int[][],\ int,\ int,\ java.util.HashMap)
comment9.text=\r\n\ Devuelve\ el\ costo\ de\ cambiar\ todos\ los\ l\u00EDmites\ de\ velocidad\ de\ las\ rutas\ que\ comparten\ una\ intersecci\u00F3n\ dada\ por\ el\ l\u00EDmite\ de\ velocidad\ mayor.\r\n
numComments=18
