#BlueJ class context
comment0.target=ICPC
comment0.text=\r\n\ Simulaci\u00F3n\ inspirada\ en\ el\ Problem\ B\ de\ la\ marat\u00F3n\ de\ programaci\u00F3n\ internacional\ 2020\ The\ Cost\ of\ Speed\ Limits.\r\n\ \r\n\ @author\ Angel\ Cuervo\ y\ Jefer\ Gonzalez\ \r\n\ @version\ 1.0\ (31/08/2022)\r\n
comment1.params=length\ width
comment1.target=ICPC(int,\ int)
comment1.text=\r\n\ Constructor\ para\ objetos\ de\ clase\ ICPC.\r\n\ @param\ length\ Largo\ de\ la\ red\ ICPC.\r\n\ @param\ width\ Ancho\ de\ la\ red\ ICPC.\r\n
comment10.params=type\ intersectionA\ intersectionB\ speedLimit
comment10.target=void\ putSign(java.lang.String,\ java.lang.String,\ java.lang.String,\ int)
comment10.text=\r\n\ Pone\ una\ nueva\ se\u00F1al\ de\ l\u00EDmite\ de\ velocidad\ a\ la\ red\ de\ carreteras\ de\ ICPC.\r\n\ @param\ type\ Tipo\ de\ se\u00F1al\ puede\ ser\ Normal,\ Twin\ o\ Cautious.\ \r\n\ @param\ intersectionA\ Color\ de\ la\ primera\ intersecci\u00F3n\ que\ conforma\ la\ ruta.\r\n\ @param\ intersectionB\ Color\ de\ la\ segunda\ intersecci\u00F3n\ que\ conforma\ la\ ruta.\r\n\ @param\ speddLimit\ Velocidad\ m\u00E1xima\ que\ va\ a\ tener\ la\ carretera.\r\n
comment11.params=color
comment11.target=void\ delIntersection(java.lang.String)
comment11.text=\r\n\ Elimina\ una\ intersecci\u00F3n\ de\ la\ red\ de\ carreteras\ de\ ICPC.\r\n\ @param\ color\ Color\ con\ el\ que\ se\ identifica\ la\ intersecci\u00F3n\ que\ se\ va\ a\ eliminar.\r\n
comment12.params=intersectionA\ intersectionB
comment12.target=void\ delRoute(java.lang.String,\ java.lang.String)
comment12.text=\r\n\ Elimina\ una\ carretera\ de\ la\ red\ de\ carreteras\ de\ ICPC.\r\n\ @param\ intersectionA\ Color\ de\ la\ primera\ intersecci\u00F3n\ que\ conforma\ la\ ruta.\r\n\ @param\ intersectionB\ Color\ de\ la\ segunda\ intersecci\u00F3n\ que\ conforma\ la\ ruta.\r\n
comment13.params=intersectionA\ intersectionB
comment13.target=void\ removeSign(java.lang.String,\ java.lang.String)
comment13.text=\r\n\ Quita\ una\ se\u00F1al\ de\ l\u00EDmite\ de\ velocidad\ a\ la\ red\ de\ carreteras\ de\ ICPC.\r\n\ @param\ intersectionA\ Color\ de\ la\ primera\ intersecci\u00F3n\ que\ conforma\ al\ ruta\ donde\ est\u00E1\ ubicada\ la\ se\u00F1al.\r\n\ @param\ intersectionB\ Color\ de\ la\ segunda\ intersecci\u00F3n\ que\ conforma\ al\ ruta\ donde\ est\u00E1\ ubicada\ la\ se\u00F1al.\r\n
comment14.params=
comment14.target=java.lang.String[]\ intersections()
comment14.text=\r\n\ Da\ todas\ las\ intersecciones\ que\ se\ encuentran\ el\ la\ red\ de\ carreteras\ de\ ICPC.\r\n\ @return\ Retorna\ un\ arreglo\ con\ los\ colores\ que\ se\ identifican\ las\ intersecciones.\r\n
comment15.params=
comment15.target=java.lang.String[][]\ roads()
comment15.text=\r\n\ Da\ todas\ las\ carreteras\ que\ se\ encuentran\ el\ la\ red\ de\ carreteras\ de\ ICPC.\r\n\ @return\ Retorna\ un\ arreglo\ con\ los\ colores\ de\ las\ intersecciones\ que\ conforman\ la\ rutas.\r\n
comment16.params=
comment16.target=java.lang.String[][]\ signs()
comment16.text=\r\n\ Da\ todas\ las\ se\u00F1ales\ de\ l\u00EDmite\ de\ velocidad\ que\ se\ encuentran\ el\ la\ red\ de\ carreteras\ de\ ICPC.\r\n\ @return\ Retorna\ un\ arreglo\ con\ los\ colores\ de\ las\ intersecciones\ que\ conforman\ la\ rutas\ donde\ se\ encuentran\ las\ se\u00F1ales\ de\ l\u00EDmite\ de\ velocidad.\r\n
comment17.params=
comment17.target=java.lang.String[][]\ wrongSigns()
comment17.text=\r\n\ Da\ todas\ las\ se\u00F1ales\ de\ l\u00EDmite\ de\ velociad\ erroneas\ que\ se\ encuentran\ el\ la\ red\ de\ carreteras\ de\ ICPC.\r\n\ @return\ Retorna\ un\ arreglo\ con\ los\ colores\ de\ las\ intersecciones\ que\ conforman\ la\ rutas\ donde\ se\ encuentran\ las\ se\u00F1ales\ de\ l\u00EDmite\ de\ velocidad\ erroneas.\r\n
comment18.params=
comment18.target=java.lang.String[][]\ unNecessarySigns()
comment18.text=\r\n\ Da\ todas\ las\ se\u00F1ales\ de\ l\u00EDmite\ de\ velociad\ innecesarias\ que\ se\ encuentran\ el\ la\ red\ de\ carreteras\ de\ ICPC.\r\n\ @return\ Retorna\ un\ arreglo\ con\ los\ colores\ de\ las\ intersecciones\ que\ conforman\ la\ rutas\ donde\ se\ encuentran\ las\ se\u00F1ales\ de\ l\u00EDmite\ de\ velocidad\ innecesarias.\r\n
comment19.params=
comment19.target=int\ totalSignsCost()
comment19.text=\r\n\ Da\ el\ costo\ total\ de\ las\ se\u00F1ales\ de\ la\ red\ de\ carreteras\ ICPC.\r\n\ @return\ Costo\ total.\r\n
comment2.params=length\ width\ cost
comment2.target=ICPC(int,\ int,\ int)
comment2.text=\r\n\ Constructor\ para\ objetos\ de\ clase\ ICPC\r\n\ @param\ length\ Largo\ de\ la\ red\ ICPC.\r\n\ @param\ width\ Ancho\ de\ la\ red\ ICPC.\r\n\ @param\ cost\ Costo\ de\ las\ se\u00F1ales\ de\ la\ red\ ICPC.\r\n
comment20.params=
comment20.target=void\ makeVisible()
comment20.text=\r\n\ Hace\ visible\ la\ red\ de\ carreteras\ de\ ICPC.\r\n
comment21.params=
comment21.target=void\ makeInvisible()
comment21.text=\r\n\ Hace\ Invisible\ la\ red\ de\ carreteras\ de\ ICPC.\r\n
comment22.params=
comment22.target=void\ finish()
comment22.text=\r\n\ Termina\ el\ simulador\ de\ la\ red\ de\ carreteras\ de\ ICPC.\r\n
comment23.params=
comment23.target=boolean\ ok()
comment23.text=\r\n\ Dice\ si\ la\ \u00FAltima\ acci\u00F3n\ se\ hizo\ o\ no.\r\n\ @return\ Retorna\ si\ la\ \u00FAltima\ acci\u00F3n\ se\ pudo\ realizar\ o\ no.\r\n
comment24.params=
comment24.target=int\ getLength()
comment24.text=\r\n\ @return\ El\ largo\ de\ la\ red\ ICPC.\r\n
comment25.params=
comment25.target=int\ getWidth()
comment25.text=\r\n\ @return\ El\ ancho\ de\ la\ red\ ICPC.\r\n
comment26.params=
comment26.target=int\ getSignalCost()
comment26.text=\r\n\ @return\ El\ costo\ de\ poner\ una\ se\u00F1al\ en\ la\ red\ ICPC.\r\n
comment27.params=
comment27.target=java.util.HashMap\ getIntersections()
comment27.text=\r\n\ @return\ Las\ intersecciones\ presentes\ en\ la\ red\ ICPC.\r\n
comment28.params=
comment28.target=java.util.HashMap\ getRoads()
comment28.text=\r\n\ @return\ Las\ rutas\ presentes\ en\ la\ red\ ICPC.\r\n
comment29.params=
comment29.target=java.util.HashMap\ getSigns()
comment29.text=\r\n\ @return\ Las\ se\u00F1ales\ presentes\ en\ la\ red\ ICPC.\r\n
comment3.params=cost\ routesSpeedLimits
comment3.target=ICPC(int,\ int[][])
comment3.text=\r\n\ Constructor\ para\ objetos\ de\ clase\ ICPC\r\n\ @param\ cost\ Costo\ de\ las\ se\u00F1ales\ de\ la\ red\ ICPC.\r\n\ @param\ routesSpeedLimits\ Informaci\u00F3n\ definida\ en\ el\ Problem\ B.\r\n
comment30.params=
comment30.target=java.util.ArrayList\ getUnNecessarySigns()
comment30.text=\r\n\ @return\ Las\ se\u00F1ales\ innecesarias\ presentes\ en\ la\ red\ ICPC.\r\n
comment31.params=
comment31.target=void\ erase()
comment31.text=\r\n\ Borra\ de\ la\ pantalla\ la\ red\ de\ carreteras\ de\ ICPC.\r\n
comment32.params=
comment32.target=void\ draw()
comment32.text=\r\n\ Dibuja\ en\ la\ pantalla\ la\ red\ de\ carreteras\ de\ ICPC.\r\n
comment33.params=A\ B
comment33.target=java.lang.String\ order(java.lang.String,\ java.lang.String)
comment33.text=\r\n\ Ordena\ dos\ cadenas\ alfabeticamente\ y\ las\ une\ con\ un\ gui\u00F3n.\r\n
comment34.params=intersection
comment34.target=boolean\ existI(java.lang.String)
comment34.text=\r\n\ Dice\ s\u00ED\ existe\ una\ intersecci\u00F3n\ con\ ese\ color.\r\n\ @param\ intersection\ Color\ de\ la\ intersecci\u00F3n.\r\n\ @return\ Valor\ booleano\ que\ dice\ si\ ya\ existe\ una\ intersecci\u00F3n\ con\ ese\ color\ en\ al\ red.\r\n
comment35.params=route
comment35.target=boolean\ existR(java.lang.String)
comment35.text=\r\n\ Dice\ s\u00ED\ existe\ una\ ruta\ que\ une\ dos\ intersecciones\ con\ esos\ colores.\r\n\ @param\ route\ Intersecciones\ que\ conforman\ la\ ruta\ concatenados\ con\ un\ guion.\r\n\ @return\ Valor\ booleano\ que\ dice\ si\ ya\ existe\ una\ ruta\ con\ ese\ color\ en\ al\ red.\r\n
comment36.params=sign
comment36.target=boolean\ existS(java.lang.String)
comment36.text=\r\n\ Dice\ s\u00ED\ existe\ una\ se\u00F1al\ en\ una\ ruta\ que\ une\ dos\ intersecciones\ con\ esos\ colores.\r\n
comment37.params=route
comment37.target=boolean\ existRSL(java.lang.String)
comment37.text=\r\n\ Dice\ s\u00ED\ existe\ un\ l\u00EDmite\ de\ velocidad\ en\ la\ carretera\ dada.\r\n
comment38.params=route\ speedLimit
comment38.target=boolean\ higherRSL(java.lang.String,\ int)
comment38.text=\r\n\ Dice\ s\u00ED\ el\ nuevo\ l\u00EDmite\ de\ velocidad\ es\ mayor\ al\ que\ hab\u00EDa\ antes.\r\n
comment39.params=intersection
comment39.target=void\ delRoutes(java.lang.String)
comment39.text=\r\n\ Elimina\ todas\ las\ carreteras\ asociadas\ a\ ala\ intersecci\u00F3n\ dada.\r\n
comment4.params=color\ x\ y
comment4.target=void\ addIntersection(java.lang.String,\ int,\ int)
comment4.text=\r\n\ A\u00F1ade\ una\ nueva\ intersecci\u00F3n\ a\ la\ red\ de\ carreteras\ de\ ICPC.\r\n\ @param\ color\ Color\ que\ identifica\ a\ la\ intersecci\u00F3n.\r\n\ @param\ x\ Poscici\u00F3n\ en\ el\ eje\ x\ de\ la\ intersecci\u00F3n.\r\n\ @param\ y\ Poscici\u00F3n\ en\ el\ eje\ y\ de\ la\ intersecci\u00F3n.\r\n
comment40.params=color
comment40.target=void\ delSigns(java.lang.String)
comment40.text=\r\n\ Elimina\ todas\ las\ se\u00F1ales\ de\ las\ carreteras\ que\ tienen\ las\ intersecciones\ con\ el\ o\ los\ colores\ dados.\r\n
comment41.params=map
comment41.target=java.lang.String[]\ inArray(java.util.HashMap)
comment41.text=\r\n\ Obtiene\ las\ llaves\ de\ las\ intersecciones\ en\ un\ arreglo\ de\ cadenas.\r\n
comment42.params=map
comment42.target=java.lang.String[][]\ inArrays(java.util.HashMap)
comment42.text=\r\n\ Obtiene\ las\ llaves\ de\ las\ carreteras\ y\ se\u00F1ales\ en\ un\ arreglo\ de\ arreglos.\r\n
comment43.params=array
comment43.target=java.lang.String[][]\ inArrays(java.util.ArrayList)
comment43.text=\r\n\ Obtiene\ las\ intersecciones\ de\ las\ carreteras\ y\ se\u00F1ales\ en\ un\ arreglo\ de\ arreglos.\r\n
comment44.params=sign
comment44.target=void\ necessary(java.lang.String)
comment44.text=\r\n\ Dice\ si\ una\ se\u00F1al\ de\ l\u00EDmite\ de\ velocidad\ es\ innecesaria,\ si\ lo\ es,\ entonces\ cambia\ su\ color\ por\ verde\ y\ la\ a\u00F1ade\ a\ las\ se\u00F1ales\ innecesarias.\r\n
comment45.params=sign\ route
comment45.target=void\ wrong(java.lang.String,\ java.lang.String)
comment45.text=\r\n\ Dice\ si\ una\ se\u00F1al\ de\ l\u00EDmite\ de\ velocidad\ es\ erronea,\ si\ lo\ es,\ entonces\ cambia\ su\ color\ de\ n\u00FAmero\ por\ rojo\ y\ la\ a\u00F1ade\ a\ las\ se\u00F1ales\ erroneas.\r\n
comment46.params=routesSpeedLimits
comment46.target=void\ validInformation(int[][])
comment46.text=\r\n\ Valida\ la\ informaci\u00F3n\ de\ las\ carreteras\ junto\ con\ sus\ l\u00EDmites\ de\ velocidad.\r\n
comment47.params=x\ y
comment47.target=boolean\ validIntersection(int,\ int)
comment47.text=\r\n\ Valida\ si\ la\ intersecci\u00F3n\ tiene\ una\ posici\u00F3n\ diferente\ a\ las\ presentes\ en\ la\ red\ ICPC.\r\n\ @param\ x\ Posici\u00F3n\ horizontal\ de\ la\ intersecci\u00F3n.\r\n\ @param\ y\ Posici\u00F3n\ vertical\ de\ la\ intersecci\u00F3n.\r\n\ @return\ Valor\ booleano\ que\ dice\ si\ es\ valida\ la\ intersecci\u00F3n.\r\n
comment48.params=intersectionA\ intersectionB
comment48.target=boolean\ validRoute(java.lang.String,\ java.lang.String)
comment48.text=\r\n\ Valida\ si\ la\ ruta\ es\ innecesaria\ .\r\n\ @param\ intersectionA\ Primera\ intersecci\u00F3n\ de\ la\ ruta.\r\n\ @param\ y\ Posici\u00F3n\ Segunda\ intersecci\u00F3n\ de\ la\ ruta.\r\n\ @return\ Valor\ booleano\ que\ dice\ si\ es\ valida\ la\ ruta.\r\n
comment49.params=intersection
comment49.target=int\ xPosition(java.lang.String)
comment49.text=\r\n\ Da\ la\ posici\u00F3n\ en\ x\ de\ una\ intersecci\u00F3n\r\n\ @param\ intersection\ Color\ de\ la\ intersecci\u00F3n.\r\n\ @return\ Posici\u00F3n\ horizontal\ en\ la\ que\ se\ encuentra\ la\ intersecci\u00F3n.\r\n
comment5.params=type\ color\ x\ y
comment5.target=void\ addIntersection(java.lang.String,\ java.lang.String,\ int,\ int)
comment5.text=\r\n\ A\u00F1ade\ una\ nueva\ intersecci\u00F3n\ a\ la\ red\ de\ carreteras\ de\ ICPC.\r\n\ @param\ type\ Tipo\ de\ intersecci\u00F3n\ puede\ ser\ Normal,\ Hermit\ o\ Neddy.\ \r\n\ @param\ color\ Color\ que\ identifica\ a\ la\ intersecci\u00F3n.\r\n\ @param\ x\ Poscici\u00F3n\ en\ el\ eje\ x\ de\ la\ intersecci\u00F3n.\r\n\ @param\ y\ Poscici\u00F3n\ en\ el\ eje\ y\ de\ la\ intersecci\u00F3n.\r\n
comment50.params=intersection
comment50.target=int\ yPosition(java.lang.String)
comment50.text=\r\n\ Da\ la\ posici\u00F3n\ en\ y\ de\ una\ intersecci\u00F3n\r\n\ @param\ intersection\ Color\ de\ la\ intersecci\u00F3n.\r\n\ @return\ Posici\u00F3n\ vetical\ en\ la\ que\ se\ encuentra\ la\ intersecci\u00F3n.\r\n
comment51.params=intersection
comment51.target=int\ numberRoutes(java.lang.String)
comment51.text=\r\n\ Devuelve\ el\ n\u00FAmero\ de\ rutas\ que\ tiene\ asociada\ una\ intersecci\u00F3n.\r\n
comment52.params=intersection
comment52.target=boolean\ validRIntersection(java.lang.String)
comment52.text=\r\n\ Dice\ si\ la\ se\u00F1al\ es\ Hermit\ y\ ya\ tiene\ una\ ruta\ asociada.\r\n\ @param\ intersection\ Intersecci\u00F3n\ que\ se\ quiere\ validar.\r\n\ @return\ Valor\ booleano\ que\ dice\ si\ la\ intersecci\u00F3n\ es\ Hermit\ y\ ya\ tiene\ una\ ruta\ asociada.\r\n
comment53.params=length
comment53.target=void\ validLength(int)
comment54.params=width
comment54.target=void\ validWidth(int)
comment55.params=cost
comment55.target=void\ validCost(int)
comment56.params=speedLimit
comment56.target=void\ validSpeedLimit(int)
comment57.params=type
comment57.target=void\ validIntersectionType(java.lang.String)
comment58.params=type
comment58.target=void\ validRouteType(java.lang.String)
comment59.params=type
comment59.target=void\ validSignType(java.lang.String)
comment6.params=intersectionA\ intersectionB
comment6.target=void\ addRoute(java.lang.String,\ java.lang.String)
comment6.text=\r\n\ Agrega\ una\ nueva\ ruta\ a\ la\ red\ de\ carreteras\ de\ ICPC\ dada\ dos\ intersecciones\ existentes.\r\n\ @param\ intersectionA\ Color\ de\ la\ primera\ intersecci\u00F3n\ a\ la\ cu\u00E1l\ llega\ la\ ruta.\r\n\ @param\ intersectionB\ Color\ de\ la\ segunda\ intersecci\u00F3n\ a\ la\ cu\u00E1l\ llega\ la\ ruta.\r\n
comment60.params=route
comment60.target=void\ validWhitoutSigns(java.lang.String)
comment7.params=type\ intersectionA\ intersectionB
comment7.target=void\ addRoute(java.lang.String,\ java.lang.String,\ java.lang.String)
comment7.text=\r\n\ Agrega\ una\ nueva\ ruta\ a\ la\ red\ de\ carreteras\ de\ ICPC\ dada\ dos\ intersecciones\ existentes.\r\n\ @param\ type\ Tipo\ de\ ruta\ puede\ ser\ Normal,\ Rebel\ o\ Fixed.\ \r\n\ @param\ intersectionA\ Color\ de\ la\ primera\ intersecci\u00F3n\ a\ la\ cu\u00E1l\ llega\ la\ ruta.\r\n\ @param\ intersectionB\ Color\ de\ la\ segunda\ intersecci\u00F3n\ a\ la\ cu\u00E1l\ llega\ la\ ruta.\r\n
comment8.params=intersectionA\ intersectionB\ speedLimit
comment8.target=void\ routeSpeedLimit(java.lang.String,\ java.lang.String,\ int)
comment8.text=\r\n\ Asigna\ un\ l\u00EDmite\ de\ velocidad\ a\ una\ ruta.\r\n\ @param\ intersectionA\ Color\ de\ la\ primera\ intersecci\u00F3n\ a\ la\ cu\u00E1l\ llega\ la\ ruta.\r\n\ @param\ intersectionB\ Color\ de\ la\ segunda\ intersecci\u00F3n\ a\ la\ cu\u00E1l\ llega\ la\ ruta.\r\n\ @param\ speedLimit\ L\u00EDmite\ de\ velocidad\ de\ la\ ruta.\r\n
comment9.params=intersectionA\ intersectionB\ speedLimit
comment9.target=void\ putSign(java.lang.String,\ java.lang.String,\ int)
comment9.text=\r\n\ Pone\ una\ nueva\ se\u00F1al\ de\ l\u00EDmite\ de\ velocidad\ a\ la\ red\ de\ carreteras\ de\ ICPC.\r\n\ @param\ intersectionA\ Color\ de\ la\ primera\ intersecci\u00F3n\ que\ conforma\ la\ ruta.\r\n\ @param\ intersectionB\ Color\ de\ la\ segunda\ intersecci\u00F3n\ que\ conforma\ la\ ruta.\r\n\ @param\ speddLimit\ Velocidad\ m\u00E1xima\ que\ va\ a\ tener\ la\ carretera.\r\n
numComments=61
